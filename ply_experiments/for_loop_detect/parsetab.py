
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEAND ASSIGN DIVIDE EQ FLOAT FOR GE GT ID INT LE LT L_FLOWERBRACE L_PAREN L_SHIFT MINUS MINUS_MINUS MOD MULTIPLY NE NEWLINE OR PLUS PLUS_PLUS R_FLOWERBRACE R_PAREN R_SHIFT SEMICOLON TYPE WHILE XOR\n    detector : for_loop\n    \n    statement : var_assign SEMICOLON\n              | expression SEMICOLON\n              | expression_unary SEMICOLON\n              | while_loop\n              | for_loop\n              | declaration SEMICOLON\n              | SEMICOLON\n    \n    statement_multiple : statement_multiple statement\n    \n    statement_multiple : statement\n    \n    block : L_FLOWERBRACE statement_multiple R_FLOWERBRACE\n    \n    while_loop : WHILE condition block\n               | WHILE condition statement\n    \n    for_loop : FOR for_condition block\n             | FOR for_condition statement\n    \n    for_condition : L_PAREN var_assign SEMICOLON expression relop expression SEMICOLON var_assign R_PAREN\n                  | L_PAREN declaration SEMICOLON expression relop expression SEMICOLON expression R_PAREN\n    \n    condition : L_PAREN expression relop expression R_PAREN\n    \n    relop : LE\n          | LT\n          | GE\n          | GT\n          | NE\n          | EQ\n    \n    declaration : TYPE ID\n                | TYPE var_assign\n    \n    var_assign : ID ASSIGN expression\n    \n    expression : expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression PLUS expression\n               | expression MINUS expression\n               | expression L_SHIFT expression\n               | expression R_SHIFT expression\n               | expression MOD expression\n               | expression XOR expression\n               | expression AND expression\n               | expression OR expression\n    \n    expression_unary : post\n                     | pre\n    \n    post : ID PLUS_PLUS\n         | ID MINUS_MINUS\n    \n    pre : PLUS_PLUS ID\n        | MINUS_MINUS ID\n    \n    expression : INT\n               | FLOAT\n    \n    expression : ID\n    \n    empty :\n    '
    
_lr_action_items = {'FOR':([0,4,6,7,8,10,13,14,28,29,30,31,42,43,47,55,56,69,70,86,91,92,],[3,3,-14,-15,3,-8,-5,-6,3,-10,-2,-3,-4,-7,3,-11,-9,-12,-13,-18,-16,-17,]),'$end':([1,2,6,7,10,13,14,30,31,42,43,55,69,70,],[0,-1,-14,-15,-8,-5,-6,-2,-3,-4,-7,-11,-12,-13,]),'L_PAREN':([3,21,],[5,48,]),'L_FLOWERBRACE':([4,47,86,91,92,],[8,8,-18,-16,-17,]),'SEMICOLON':([4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,25,26,28,29,30,31,42,43,45,46,47,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,84,85,86,91,92,],[10,-14,-15,10,30,-8,31,42,-5,-6,43,-46,-44,-45,-38,-39,53,54,10,-10,-2,-3,-4,-7,-40,-41,10,-25,-26,-42,-43,-11,-9,-28,-46,-29,-30,-31,-32,-33,-34,-35,-36,-37,-27,-12,-13,87,88,-18,-16,-17,]),'ID':([4,5,6,7,8,10,13,14,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,53,54,55,56,69,70,74,75,76,77,78,79,80,81,82,86,87,88,91,92,],[16,27,-14,-15,16,-8,-5,-6,49,51,52,16,-10,-2,-3,58,58,58,58,58,58,58,58,58,58,-4,-7,58,16,58,58,58,-11,-9,-12,-13,58,-19,-20,-21,-22,-23,-24,58,58,-18,27,58,-16,-17,]),'INT':([4,6,7,8,10,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,53,54,55,56,69,70,74,75,76,77,78,79,80,81,82,86,88,91,92,],[17,-14,-15,17,-8,-5,-6,17,-10,-2,-3,17,17,17,17,17,17,17,17,17,17,-4,-7,17,17,17,17,17,-11,-9,-12,-13,17,-19,-20,-21,-22,-23,-24,17,17,-18,17,-16,-17,]),'FLOAT':([4,6,7,8,10,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,53,54,55,56,69,70,74,75,76,77,78,79,80,81,82,86,88,91,92,],[18,-14,-15,18,-8,-5,-6,18,-10,-2,-3,18,18,18,18,18,18,18,18,18,18,-4,-7,18,18,18,18,18,-11,-9,-12,-13,18,-19,-20,-21,-22,-23,-24,18,18,-18,18,-16,-17,]),'WHILE':([4,6,7,8,10,13,14,28,29,30,31,42,43,47,55,56,69,70,86,91,92,],[21,-14,-15,21,-8,-5,-6,21,-10,-2,-3,-4,-7,21,-11,-9,-12,-13,-18,-16,-17,]),'TYPE':([4,5,6,7,8,10,13,14,28,29,30,31,42,43,47,55,56,69,70,86,91,92,],[22,22,-14,-15,22,-8,-5,-6,22,-10,-2,-3,-4,-7,22,-11,-9,-12,-13,-18,-16,-17,]),'PLUS_PLUS':([4,6,7,8,10,13,14,16,28,29,30,31,42,43,47,55,56,69,70,86,91,92,],[23,-14,-15,23,-8,-5,-6,45,23,-10,-2,-3,-4,-7,23,-11,-9,-12,-13,-18,-16,-17,]),'MINUS_MINUS':([4,6,7,8,10,13,14,16,28,29,30,31,42,43,47,55,56,69,70,86,91,92,],[24,-14,-15,24,-8,-5,-6,46,24,-10,-2,-3,-4,-7,24,-11,-9,-12,-13,-18,-16,-17,]),'R_FLOWERBRACE':([6,7,10,13,14,28,29,30,31,42,43,55,56,69,70,],[-14,-15,-8,-5,-6,55,-10,-2,-3,-4,-7,-11,-9,-12,-13,]),'MULTIPLY':([11,16,17,18,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,83,84,85,90,],[32,-46,-44,-45,-28,-46,-29,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'DIVIDE':([11,16,17,18,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,83,84,85,90,],[33,-46,-44,-45,-28,-46,-29,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'PLUS':([11,16,17,18,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,83,84,85,90,],[34,-46,-44,-45,-28,-46,-29,-30,-31,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'MINUS':([11,16,17,18,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,83,84,85,90,],[35,-46,-44,-45,-28,-46,-29,-30,-31,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'L_SHIFT':([11,16,17,18,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,83,84,85,90,],[36,-46,-44,-45,-28,-46,-29,-30,-31,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'R_SHIFT':([11,16,17,18,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,83,84,85,90,],[37,-46,-44,-45,-28,-46,-29,-30,-31,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'MOD':([11,16,17,18,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,83,84,85,90,],[38,-46,-44,-45,-28,-46,-29,-30,-31,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'XOR':([11,16,17,18,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,83,84,85,90,],[39,-46,-44,-45,-28,-46,-29,-30,-31,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'AND':([11,16,17,18,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,83,84,85,90,],[40,-46,-44,-45,-28,-46,-29,-30,-31,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'OR':([11,16,17,18,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,83,84,85,90,],[41,-46,-44,-45,-28,-46,-29,-30,-31,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'ASSIGN':([16,27,49,],[44,44,44,]),'R_PAREN':([17,18,57,58,59,60,61,62,63,64,65,66,67,68,83,89,90,],[-44,-45,-28,-46,-29,-30,-31,-32,-33,-34,-35,-36,-37,-27,86,91,92,]),'LE':([17,18,57,58,59,60,61,62,63,64,65,66,67,71,72,73,],[-44,-45,-28,-46,-29,-30,-31,-32,-33,-34,-35,-36,-37,75,75,75,]),'LT':([17,18,57,58,59,60,61,62,63,64,65,66,67,71,72,73,],[-44,-45,-28,-46,-29,-30,-31,-32,-33,-34,-35,-36,-37,76,76,76,]),'GE':([17,18,57,58,59,60,61,62,63,64,65,66,67,71,72,73,],[-44,-45,-28,-46,-29,-30,-31,-32,-33,-34,-35,-36,-37,77,77,77,]),'GT':([17,18,57,58,59,60,61,62,63,64,65,66,67,71,72,73,],[-44,-45,-28,-46,-29,-30,-31,-32,-33,-34,-35,-36,-37,78,78,78,]),'NE':([17,18,57,58,59,60,61,62,63,64,65,66,67,71,72,73,],[-44,-45,-28,-46,-29,-30,-31,-32,-33,-34,-35,-36,-37,79,79,79,]),'EQ':([17,18,57,58,59,60,61,62,63,64,65,66,67,71,72,73,],[-44,-45,-28,-46,-29,-30,-31,-32,-33,-34,-35,-36,-37,80,80,80,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'detector':([0,],[1,]),'for_loop':([0,4,8,28,47,],[2,14,14,14,14,]),'for_condition':([3,],[4,]),'block':([4,47,],[6,69,]),'statement':([4,8,28,47,],[7,29,56,70,]),'var_assign':([4,5,8,22,28,47,87,],[9,25,9,50,9,9,89,]),'expression':([4,8,28,32,33,34,35,36,37,38,39,40,41,44,47,48,53,54,74,81,82,88,],[11,11,11,57,59,60,61,62,63,64,65,66,67,68,11,71,72,73,83,84,85,90,]),'expression_unary':([4,8,28,47,],[12,12,12,12,]),'while_loop':([4,8,28,47,],[13,13,13,13,]),'declaration':([4,5,8,28,47,],[15,26,15,15,15,]),'post':([4,8,28,47,],[19,19,19,19,]),'pre':([4,8,28,47,],[20,20,20,20,]),'statement_multiple':([8,],[28,]),'condition':([21,],[47,]),'relop':([71,72,73,],[74,81,82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> detector","S'",1,None,None,None),
  ('detector -> for_loop','detector',1,'p_detector','detector.py',145),
  ('statement -> var_assign SEMICOLON','statement',2,'p_statement','detector.py',155),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','detector.py',156),
  ('statement -> expression_unary SEMICOLON','statement',2,'p_statement','detector.py',157),
  ('statement -> while_loop','statement',1,'p_statement','detector.py',158),
  ('statement -> for_loop','statement',1,'p_statement','detector.py',159),
  ('statement -> declaration SEMICOLON','statement',2,'p_statement','detector.py',160),
  ('statement -> SEMICOLON','statement',1,'p_statement','detector.py',161),
  ('statement_multiple -> statement_multiple statement','statement_multiple',2,'p_statement_multiple','detector.py',167),
  ('statement_multiple -> statement','statement_multiple',1,'p_statement_single','detector.py',173),
  ('block -> L_FLOWERBRACE statement_multiple R_FLOWERBRACE','block',3,'p_block','detector.py',182),
  ('while_loop -> WHILE condition block','while_loop',3,'p_while_loop','detector.py',190),
  ('while_loop -> WHILE condition statement','while_loop',3,'p_while_loop','detector.py',191),
  ('for_loop -> FOR for_condition block','for_loop',3,'p_for_loop','detector.py',199),
  ('for_loop -> FOR for_condition statement','for_loop',3,'p_for_loop','detector.py',200),
  ('for_condition -> L_PAREN var_assign SEMICOLON expression relop expression SEMICOLON var_assign R_PAREN','for_condition',9,'p_for_condition','detector.py',213),
  ('for_condition -> L_PAREN declaration SEMICOLON expression relop expression SEMICOLON expression R_PAREN','for_condition',9,'p_for_condition','detector.py',214),
  ('condition -> L_PAREN expression relop expression R_PAREN','condition',5,'p_condition','detector.py',222),
  ('relop -> LE','relop',1,'p_relop','detector.py',230),
  ('relop -> LT','relop',1,'p_relop','detector.py',231),
  ('relop -> GE','relop',1,'p_relop','detector.py',232),
  ('relop -> GT','relop',1,'p_relop','detector.py',233),
  ('relop -> NE','relop',1,'p_relop','detector.py',234),
  ('relop -> EQ','relop',1,'p_relop','detector.py',235),
  ('declaration -> TYPE ID','declaration',2,'p_declaration','detector.py',245),
  ('declaration -> TYPE var_assign','declaration',2,'p_declaration','detector.py',246),
  ('var_assign -> ID ASSIGN expression','var_assign',3,'p_var_assign','detector.py',254),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','detector.py',263),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','detector.py',264),
  ('expression -> expression PLUS expression','expression',3,'p_expression','detector.py',265),
  ('expression -> expression MINUS expression','expression',3,'p_expression','detector.py',266),
  ('expression -> expression L_SHIFT expression','expression',3,'p_expression','detector.py',267),
  ('expression -> expression R_SHIFT expression','expression',3,'p_expression','detector.py',268),
  ('expression -> expression MOD expression','expression',3,'p_expression','detector.py',269),
  ('expression -> expression XOR expression','expression',3,'p_expression','detector.py',270),
  ('expression -> expression AND expression','expression',3,'p_expression','detector.py',271),
  ('expression -> expression OR expression','expression',3,'p_expression','detector.py',272),
  ('expression_unary -> post','expression_unary',1,'p_expression_unary','detector.py',280),
  ('expression_unary -> pre','expression_unary',1,'p_expression_unary','detector.py',281),
  ('post -> ID PLUS_PLUS','post',2,'p_post','detector.py',288),
  ('post -> ID MINUS_MINUS','post',2,'p_post','detector.py',289),
  ('pre -> PLUS_PLUS ID','pre',2,'p_pre','detector.py',296),
  ('pre -> MINUS_MINUS ID','pre',2,'p_pre','detector.py',297),
  ('expression -> INT','expression',1,'p_expression_type','detector.py',305),
  ('expression -> FLOAT','expression',1,'p_expression_type','detector.py',306),
  ('expression -> ID','expression',1,'p_expression_var','detector.py',313),
  ('empty -> <empty>','empty',0,'p_empty','detector.py',321),
]
