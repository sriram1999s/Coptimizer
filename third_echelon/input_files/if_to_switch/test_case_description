
1. INPUT: testing/t1
    INPUT DESCRIPTION:
    - 3 chains
    - 2 level nested
    - Outer chain with condition of form var==int, and inner chains have conditions that are neither of form var==int nor are uniform, unbroken, ordered range
    - One chain ends in else, other chains ends in else if
    EXPECTED OUTPUT:
    - Outer chain switched and inner chains retained the same


2. INPUT: testing/t2
    INPUT DESCRIPTION:
    - 4 chains
    - 1 level nested
    - Multiple chains at same level
    - There may or may not be other statements between chains at same level
    - All conditions of form var==int
    - All chains ends in else
    EXPECTED OUTPUT:
    - All chains switched


3. INPUT: testing/t3
    INPUT DESCRIPTION:
    - 5 chains
    - 1 level nested
    - Multiple chains at same level
    - All conditions of form var==int
    - Chains that end in else as well as else if
    - Single if condition
    EXPECTED OUTPUT:
    - All chains, but the single if, switched


4. INPUT: testing/t4
    INPUT DESCRIPTION:
    - 6 chains
    - 3 level nested
    - Multiple chains at same level
    - There may or may not be other statements between chains at same level
    - All conditions of form var==int
    - Chains that end in else as well as else if
    - Single if condition
    EXPECTED OUTPUT:
    - All chains, but the single if, switched


5. INPUT: testing/t5
    INPUT DESCRIPTION:
    - 2 chains
    - Not nested
    - Multiple chains at same level
    - Fist chain with condition of form var==int
    - Second chain does not have first condition of form var==int or var==char, nor is of the form of a uniform, unbroken, ordered range
    - One chain ends in else, other chains ends in else if
    EXPECTED OUTPUT:
    - First chain switched and second chain retained the same


6. INPUT: testing/t6
    INPUT DESCRIPTION:
    - 3 chains
    - Not nested
    - Conditions with ! and && and ||
    - Chain that end in else if as well as else
    EXPECTED OUTPUT:
    - First and second chains retained the same and third chain switched


7. INPUT: testing/t7
    INPUT DESCRIPTION:
    - 1 chain
    - Not nested
    - Multiple conditions of the form var==int
    - Chain ends in else if
    EXPECTED OUTPUT:
    - Chain switched
    - First condition of all if and else if must be of the form var==int and must be based on the same var
    - The conditions following the chosen switch variable by && are retained in an if statement within the case
    - Semantics of the conditions not violated


8. INPUT: testing/t8
    INPUT DESCRIPTION:
    - 1 chain
    - Not nested
    - Chain with condition of form var==char or char==var
    - Chains that end in else as well as else if
    EXPECTED OUTPUT:
    - Chain switched


9. INPUT: testing/t9
    INPUT DESCRIPTION:
    - 6 chain
    - 4 level nested
    - Multiple chains at same level
    - Multiple conditions of the form var==int
    - Chain ends in else
    EXPECTED OUTPUT:
    - Chain switched
    - When the condition has || the chain must not be switched


10. INPUT: testing/t10
    INPUT DESCRIPTION:
    - 1 chain
    - Not nested
    - Chain has conditions of the form var==int and var==float
    - Chain ends in else
    EXPECTED OUTPUT:
    - Chain not switched for conditions based on types other than int and char
    OUTPUT: chain will be switched if condition of form var==int or var==char. Should identify variable of type float and not switch?


11. INPUT: testing/t11
    INPUT DESCRIPTION:
    - 1 chain
    - Not nested
    - Chain has conditions of the form var==var
    - Chain ends in else if
    EXPECTED OUTPUT:
    - Chain not switched for equality conditions of any type other than var==int and var==char


12. INPUT: testing/t12
    INPUT DESCRIPTION:
    - 3 chains
    - Range cases specified using two relational operators- <= and <=
    - Logically the case should be of the form l<=var<=u where l and u are integers
    - First range beginning at 0 and having width of 10
    - Second range beginning at 2 and having width of 4
    - Third range beginning at -50 and having width of 10
    - All 8 ways of giving the condition for both ranges
    - Ranges must be specified in their logical order, for eg, 0-9 and then 10-19 and not vice versa
    - Multiple chains at same level
    EXPECTED OUTPUT:
    - Ranges are uniform, unbroken and in logical order, so they should be switched
    OUTPUT: Negative numbers -1 to -9 get accepted in first switch case 0 //?


13. INPUT: testing/t13
    INPUT DESCRIPTION:
    - 3 chains
    - Range cases specified using two relational operators- <= and <
    - Logically the case should be of the form l<=var<u where l and u are integers
    - First range beginning at 0 and having width of 10
    - Second range beginning at 2 and having width of 4
    - Third range beginning at -50 and having width of 10
    - All 8 ways of giving the condition for both ranges
    - Ranges must be specified in their logical order, for eg, 0-9 and then 10-19 and not vice versa
    - Multiple chains at same level
    EXPECTED OUTPUT:
    - Ranges are uniform, unbroken and in logical order, so they should be switched
    OUTPUT: Negative numbers -1 to -9 get accepted in first switch case 0 //?


14. INPUT: testing/t14
    INPUT DESCRIPTION:
    - 3 chains
    - Range cases specified using two relational operators- < and <=
    - Logically the case should be of the form l<var<=u where l and u are integers
    - First range beginning at 0 and having width of 10
    - Second range beginning at 2 and having width of 4
    - Third range beginning at -50 and having width of 10
    - All 8 ways of giving the condition for first range
    - Ranges must be specified in their logical order, for eg, 0-9 and then 10-19 and not vice versa
    - Multiple chains at same level
    EXPECTED OUTPUT:
    - Ranges are uniform, unbroken and in logical order, so they should be switched
    OUTPUT: Negative numbers -1 to -9 get accepted in first switch case 0 //?


15. INPUT: testing/t15
    INPUT DESCRIPTION:
    - 3 chains
    - Range cases specified using two relational operators- < and <
    - Logically the case should be of the form l<var<u where l and u are integers
    - First range beginning at 0 and having width of 10
    - Second range beginning at 2 and having width of 4
    - Third range beginning at -50 and having width of 10
    - All 8 ways of giving the condition for first range
    - Ranges must be specified in their logical order, for eg, 0-9 and then 10-19 and not vice versa
    - Multiple chains at same level
    EXPECTED OUTPUT:
    - Ranges are uniform, unbroken and in logical order, so they should be switched
    OUTPUT: Negative numbers -1 to -9 get accepted in first switch case 0 //?


16. INPUT: testing/t16
    INPUT DESCRIPTION:
    - Fist range can be switched, other two cannot.
    EXPECTED OUTPUT:
    - First range is uniform, unbroken and in logical order, so should be switched
    - Second range has 0 width, so it should not be switched
    - Third range is not in logical order, so it should not be switched
    OUTPUT: Negative numbers get accepted in switch //?


17. INPUT: testing/t17
    INPUT DESCRIPTION:
    - 4 chain
    - 2 level nested
    - Multiple chains at same level
    - Chains have conditions of the form var==int
    - Conditions with && and ||
    - Chains that end in else if as well as else
    EXPECTED OUTPUT:
    - First, second and fourth chain switched
    - When the condition has || the chain must not be switched


